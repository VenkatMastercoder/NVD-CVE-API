/* eslint-disable react/prop-types */
const CVEDataDisplay = ({ cveData }) => {
  if (!cveData) return <p>No CVE data available.</p>;

  const { cve } = cveData;

  const descriptions = cve.descriptions.map((desc) => (
    <p key={desc.lang}>{desc.value}</p>
  ));

  const cvssMetricsTable = cve.metrics.cvssMetricV2.map((metric, index) => (
    <tr key={index} className="bg-white border-b">
      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
        {metric.cvssData.version}
      </td>
      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        {metric.baseSeverity}
      </td>
      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        {metric.cvssData.baseScore}
      </td>
      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        {metric.cvssData.vectorString}
      </td>
      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        {metric.impactScore}
      </td>
      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        {metric.exploitabilityScore}
      </td>
    </tr>
  ));

  const references = cve.references.map((ref) => (
    <li key={ref.url}>
      <a href={ref.url} className="text-blue-500 hover:underline">
        {ref.url}
      </a>
      {ref.tags &&
        ref.tags.map((tag) => (
          <span
            key={tag}
            className="inline-block bg-blue-200 text-blue-800 text-xs px-2 rounded-full mx-1">
            {tag}
          </span>
        ))}
    </li>
  ));

  return (
    <div className="2xl:container mx-auto">
      <div className="w-[90%] mx-auto grid grid-cols-1">
        <div className="p-4 bg-white shadow-md rounded-lg">
          <h1 className="text-xl font-bold mb-4">{cve.id}</h1>
          <div className="py-5">
            <h2 className="font-semibold py-2">Description</h2>
            {descriptions}
          </div>
          <div className="py-5">
            <h2 className="font-semibold py-2">CVSS V2 Metrics</h2>
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Version
                  </th>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Severity
                  </th>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Base Score
                  </th>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Vector String
                  </th>

                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Impact Score
                  </th>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Exploitability Score
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {cvssMetricsTable}
              </tbody>
            </table>
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Metric
                  </th>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Value
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {cve.metrics.cvssMetricV2.map((metric, index) => (
                  <>
                    <tr key={index}>
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                        Access Vector
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {metric.cvssData.accessVector}
                      </td>
                    </tr>
                    <tr>
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                        Access Complexity
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {metric.cvssData.accessComplexity}
                      </td>
                    </tr>
                    <tr>
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                        Authentication
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {metric.cvssData.authentication}
                      </td>
                    </tr>
                    <tr>
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                        Confidentiality Impact
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {metric.cvssData.confidentialityImpact}
                      </td>
                    </tr>
                    <tr>
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                        Availability Impact
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {metric.cvssData.availabilityImpact}
                      </td>
                    </tr>
                  </>
                ))}
              </tbody>
            </table>
          </div>
          <div className="py-5">
            <h2 className="font-semibold py-2">CVSS Detailed Metrics</h2>
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Metric
                  </th>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Value
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                <tr>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                    CVSS Version
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {cve.metrics.cvssMetricV2[0].cvssData.version}
                  </td>
                </tr>
                <tr>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                    Vector String
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {cve.metrics.cvssMetricV2[0].cvssData.vectorString}
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
          <div className="py-5">
            <h2 className="font-semibold py-2">CPE Matches</h2>
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Criteria
                  </th>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Match Criteria ID
                  </th>
                  <th
                    scope="col"
                    className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Vulnerable
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {cve.configurations.map((nodes) =>
                  nodes.nodes.map((e) => {
                    return e.cpeMatch.map((match, idx) => (
                      <tr key={idx}>
                        <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                          {match.criteria}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          {match.matchCriteriaId}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          {match.vulnerable ? "Yes" : "No"}
                        </td>
                      </tr>
                    ));
                  })
                )}
              </tbody>
            </table>
          </div>
          <div className="py-5">
            <h2 className="font-semibold py-2">References</h2>
            <ul>{references}</ul>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CVEDataDisplay;
